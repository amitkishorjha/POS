@model POS.Models.RoleMaster

@{
    ViewBag.Title = "Edit";
}
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Index","RoleMaster")">Role</a></li>
    <li class="breadcrumb-item active">Edit</li>
</ol>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="page-title">
            <i class="glyphicon glyphicon-edit"></i>
            Role
        </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UniqueId)
        @Html.HiddenFor(model => model.CreatedBy)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AccessCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccessCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("Index", "RoleMaster")" class="btn btn-info btn-shadow">
                    Back to List
                    <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                </a>
                <button type="submit" value="Save" class="btn btn-warning btn-shadow" >
                    <i class="fa fa-save"> Save</i>
                </button>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
